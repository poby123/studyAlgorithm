/*
문제
월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 
한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다.

예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다.

노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 
최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다.

A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.

입력
첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. A, B, C는 21억 이하의 자연수이다.

출력
첫 번째 줄에 손익분기점 즉 최초로 이익이 발생하는 판매량을 출력한다. 손익분기점이 존재하지 않으면 -1을 출력한다.

예제 입력 1 
1000 70 170
예제 출력 1 
11

예제 입력 2 
3 2 1
예제 출력 2 
-1
*/

/*
    접근 :
    cost(비용) = a + nb; //n은 생산한 노트북 대수 => 생산한 만큼 판매한다고 가정을 하면 n = answer
    income(수입) = answer * c; //answer는 판매량

    손익분기점 : income - cost > 0 이 되는 최초의 시점.
    (income > cost) = (answer * c > a + answer * b) = (answer(c-b) > a) = (answer > a/(c-b))
    Thus answer = int(a/(c-b)) + 1.

    주의 :
    b == c 인 경우, (b는 한 대의 노트북을 생산하는 데 드는 비용, c는 노트북 하나의 가격을 의미한다.)
    노트북 판매를 통해 수익이 나지 않으므로 손익분기점이 생기지 않는다.
*/
#include <iostream>
using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);

    int a, b, c, answer;
    cin >> a >> b >> c;

    if (c - b == 0)
    {
        answer = -1;
    }
    else
    {
        answer = a / (c - b) + 1;
        answer = (answer < 0 ? -1 : answer);
    }

    cout << answer << "\n";
    return 0;
}