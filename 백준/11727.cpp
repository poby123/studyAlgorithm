/*
문제
2×n 직사각형을 1×2, 2×1과 2×2 타일로 채우는 방법의 수를 구하는 프로그램을 작성하시오.

아래 그림은 2×17 직사각형을 채운 한가지 예이다.


입력
첫째 줄에 n이 주어진다. (1 ≤ n ≤ 1,000)

출력
첫째 줄에 2×n 크기의 직사각형을 채우는 방법의 수를 10,007로 나눈 나머지를 출력한다.
*/

#include<iostream>
using namespace std;

int N, dp[1001] = {0, 1, 3};
const int MOD = 10007;

int main(){

    ios::sync_with_stdio(0);
    cin.tie(0);

    cin >> N;

    for (int i = 3; i <= N; i++)
    {
        dp[i] = (2 * dp[i - 2] + dp[i - 1]) % MOD;
    }

    cout << dp[N];

    return 0;
}

/*
풀이
dp[N] : 2 * N 직사각형 타일을 채우는 방법의 수라고 하자.
타일의 종류는 ㅣ, ㅡ, ㅁ 가 있는데, ㅣ는 가로 한 칸을 차지하므로, ㅣ와 ㅡ, ㅁ 는 분리해서 생각해야한다.

가로의 길이가 N인 타일의 마지막에 ㅣ 를 놓으면, 경우의 수는 DP[N-1] 이 된다.
가로의 길이가 N인 타일의 마지막에 ㅡ나 ㅁ 를 놓으면, 경우의 수는 DP[N-2] * 2 이다. (왜 2를 곱하냐? (ㅡ, ㅁ) 이 두가지 경우가 있기 때문이다.)
따라서 점화식은 DP[N] = DP[N-1] + 2 * DP[N-2] 가 된다.
*/